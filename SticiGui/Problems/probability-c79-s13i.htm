<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<script language="JavaScript1.8" type="text/javascript"><!--
	pageModDate = "7 February 2013 12:37 PST";
	// copyright (c) 2013 by P.B. Stark (statistics.berkeley.edu/~stark) and D.A. Wagner (http://www.cs.berkeley.edu/~daw/)
    // All rights reserved.
// -->
</script>

<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>
<script type="text/javascript" src="http://code.jquery.com/ui/1.9.2/jquery-ui.js"></script>
<link href="http://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="http://d3js.org/d3.v2.js"></script>
<script type="text/javascript" src="../../Java/Jquery/Current/jquery.bullseye-1.0.min.js"></script>
<script src="http://crypto-js.googlecode.com/svn/tags/3.1/build/rollups/sha256.js"></script>



<script type="text/javascript" src="../../Java/sticigui.js"></script>
<link href="../../Java/CSS/sticigui.css" rel="stylesheet" type="text/css" />
<script language="JavaScript1.8" type="text/javascript" src="../../Java/irGrade.js"></script>

<script language="JavaScript1.8" type="text/javascript"><!--
    var cNum = "probability-c79-s13";
    labSetUp("SeEd",cNum);
// -->
</script>

</head>

<body >
<script language="JavaScript1.8" type="text/javascript"><!--
    writeProblemSetBody(3, "Probability and Expected Value");
);
// -->
</script>

<h2>Calculating with Probabilities</h2>

<div class="problem">
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var failProb = listOfRandInts(1, 1, 5)[0]/1000;
    var qStr = 'We talked in class about the challenges of data loss in computer ' +
               'systems due to hard disk failure. As we discussed, disk failure rates ' +
               'depend on the type of disk and the way the disk is used, and in practice there are ' +
               'reasons disk failures are not independent. However, consider a probability ' +
               'model for disk failures in which failures are like independent ' +
               'tosses of a single coin: whether a disk fails in a given year has the same ' +
               'probability for all disks, and failures are independent. Assume that every hard ' +
               'disk has a ' + roundToDig(100*failProb, 1) + '% chance of failing in the next ' +
               'year (that is, the chance the coin lands heads is ' + roundToDig(100*failProb, 2) + '%. ' +
               '<span class="qSpan">According to this model, if I have a computer with two hard disks, ' +
               'what is the probability that neither disk fails in the next year?</span>';
    document.writeln(qStr);
    writeTextExercise(20,qCtr++,numToRange((1-failProb)*(1-failProb)));
// -->
</script>
</p>
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    var qStr = '<span class="qSpan">According to this model, if I have a computer with two hard ' +
               'disks, what is the probability that at least one of those disks fails in the next ' +
               'year?</span>';
    document.writeln(qStr);
    writeTextExercise(20,qCtr++,numToRange(1-(1-failProb)*(1-failProb)));
// -->
</script>
</p>
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    var qStr = 'Back in 1987, three Berkeley researchers came up with a ' +
               'method for dealing with hard disk failure (called RAID). ' +
               'In its simplest form, the idea is this: buy two hard disks, and store ' +
               'every file on both disks (in duplicate). This way, if one hard disk ' +
               'fails, you can still get all your data; however, if both hard disks fail, ' +
               'you\'re hosed. ' +
               '<span class="qSpan">According to the model in which every disk has chance ' +
               roundToDig(100*failProb, 1) + '% of failure in next year and failures are independent, ' +
               'what is the probability that you\'re hosed at some point in the next year, i.e., ' +
               'that both hard disks fail in the next year?</span>';
    document.writeln(qStr);
    writeTextExercise(20,qCtr++,numToRange(failProb*failProb));
// -->
</script>
</p>
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    var qStr = 'One disadvantage of the simple RAID scheme mentioned above is that, ' +
               'if I have 1 Terabyte of data, I need to buy two 1 Terabyte hard disks ' +
               '(double the storage), which costs me twice as much as no redundancy. ' +
               'So, the Berkeley researchers came up with a more clever scheme, which has ' +
               'the following property: if I have 1 Terabyte of data, I need to buy three 0.5 ' +
               'Terabyte hard disks (a total of 1.5 Terabytes of storage, so the cost of ' +
               'reliability is only 1.5x, not 2x). The good news is that if any one hard ' +
               'disk fails, all your data remains accessible. However, if 2 or more hard ' +
               'disks fail, you are hosed. ' +
               '<span class="qSpan">According to the model in which every disk has chance ' +
               roundToDig(100*failProb, 1) + '% of failure in next year and failures are independent, ' +
               'what is the chance that you\'re hosed at some point in the next year, i.e., ' +
               'that 2 or more of the 3 hard disks fail in the next year?</span>';
    document.writeln(qStr);
    writeTextExercise(20,qCtr++,numToRange(binomialTail(3,failProb,2)));
// -->
</script>
</p>
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    var qStr = 'Consider a different probability model for disk failure: all disks have the ' +
               'same probability of failure in the next year, ' + roundToDig(100*failProb, 1) +
               '%, but failures might be dependent. ' +
               '<span class="qSpan">What is the smallest possible chance that two or more ' +
               'of the three disks fail in the next year?</span>';
    document.writeln(qStr);
    writeTextExercise(20,qCtr++,"0:0.0000001");
// -->
</script>
</p>
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    var qStr = '<span class="qSpan">According to this revised model, what is the largest ' +
               'possible chance that two or more of the three disks fail in the next year?</span>';
    document.writeln(qStr);
    writeTextExercise(20,qCtr++,numToRange(failProb));
// -->
</script>
</p>
</div>


<div class="problem">
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
  document.writeln(startProblem(pCtr++));
  var payOff = 10*listOfRandInts(1, 51, 60)[0];
  var possible = 1000;
  var qStr = 'The California lottery can be played in many different ways, ' +
             'but the simplest version (Daily 3 Straight) works like this: ' +
             'When you buy a lottery ticket, you pick a three-digit number ' +
             '(from 000 to 999). The lottery then draws a random three-digit number, ' +
             'with all possibilities equally likely. If they draw your random number, ' +
             'you win; otherwise, you lose. In practice, the amount you win if your ' +
             'number comes up varies, but for this homework let\'s assume that you win ' +
             'exactly $' + roundToDig(payOff, 0) + ' if your number appears and $0 otherwise. ' +
             '<span class="qSpan">What is the expected value of your winnings (in dollars), ' +
             'if you play once?</span>';
  document.writeln(qStr);
  writeTextExercise(20,qCtr++,numToRange(payOff/possible));
  document.writeln('</p>');
// -->
</script>
</p>
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
   var qStr = 'Assume you decide to play the Daily 3 Straight California lottery, ' +
              'as described above. It costs $1 to buy a lottery ticket. ' +
              '<span class="qSpan">Is this a good deal?</span>';
   document.writeln(qStr);
   var rawOpt = ["Yes, if you play many times, you'll probably make a net profit.",
                 "No, if you play many times, you'll probably lose money overall.",
                 "Neutral, if you play many times, you'll approximately break even.",
                 "There's not enough information to answer the question."
                ];
   var optPerm = randPermutation(rawOpt, 'inverse');
   var opt = optPerm[0];
   writeSelectExercise(false,qCtr++,opt,alphabet[optPerm[1][1]]);
// -->
</script>
</p>
</div>




<div class="problem">
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
   document.writeln(startProblem(pCtr++));
   var bux = listOfDistinctRandInts(2, 3, 7).sort(numberLessThan);
   var pWin = 21/36;
   var qStr = 'Here\'s a game. Alice and Bob each roll a fair, six-sided die. ' +
              'If Alice\'s die comes up with a number higher than Bob\'s, Bob loses ' +
              'and he gets nothing. If Bob\'s number comes up higher, or if they tie, ' +
              'Bob wins $' + bux[1] + ' from Alice. <span class="qSpan">What is the ' +
              'expected value of Bob\'s winnings, if he plays this game once?</span>';
   document.writeln(qStr);
   writeTextExercise(20,qCtr++,numToRange(bux[1]*pWin));
// -->
</script>
</p>
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
   var qStr = 'Suppose Alice charges Bob $' + bux[0] + ' (up front) for the ' +
              'privilege of playing this game with her. <span class="qSpan">Is this ' +
              'game a good deal for Bob?<span>';
   document.writeln(qStr);
   var rawOpt = ["Yes, if Bob can play this game many times he'll tend to make money.",
                 "No, if Bob plays this game many times he'll tend to lose money.",
                 "Neutral, if Bob plays this game many times he'll tend to break even.",
                 "There's not enough information to answer the question."
                ];
   var optPerm = randPermutation(rawOpt, 'inverse');
   var opt = optPerm[0];
   var eWin = pWin*bux[1] - bux[0];
   var inx = 2;
   if (eWin > 0) {
      inx = 0;
   } else if (inx < 0) {
      inx = 1;
   }
   writeSelectExercise(false,qCtr++,opt,alphabet[optPerm[1][inx]]);
// -->
</script>
</p>
</div>


<script language="JavaScript1.8" type="text/javascript" ><!--
    writeProblemSetFooter();
// -->
</script>
</body>
</html>
