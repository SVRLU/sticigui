<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<script language="JavaScript1.8" type="text/javascript"><!--
	pageModDate = "28 January 2013 08:37 PST";
	// copyright 1997--2013 by P.B. Stark, statistics.berkeley.edu/~stark.
    // All rights reserved.
// -->
</script>

<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>
<script type="text/javascript" src="../../Java/Jquery/Current/jquery.bullseye-1.0.min.js"></script> 


<script language="JavaScript1.8" type="text/javascript" src="../../Java/irGrade.js">
</script>
<script language="JavaScript1.8" type="text/javascript"><!--
    var cNum = "chiSquare";
    labSetUp("SeEd",cNum);
// -->
</script>
</head>

<body >
<script language="JavaScript1.8" type="text/javascript"><!--
    writeProblemSetBody();
// -->
</script>


<div class-"indent"><h2>
    The Multinomial Distribution and the Chi-Squared test for Goodness of Fit
</h2>
</div>


<!-- ================================= START PROBLEM =================================== -->
<div class="problem">
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var nCards = listOfRandInts(1, 3, 8)[0];
    var faceChoices = listOfDistinctRandInts(2, 0, faces.length-1).sort(numberLessThan);
    var card1 = faces[faceChoices[0]];
    var card2 = faces[faceChoices[1]];
    if (faceChoices[0] == 5) {
        card1 += 'es';
    } else {
        card1 += 's';
    }
    if (faceChoices[1] == 5) {
        card2 += 'es';
    } else {
        card2 += 's';
    }
    var qStr = 'Consider dealing a hand of ' + nCards.toString() + ' cards from a well ' +
               'shuffled standard deck of playing cards.  Let <em>X</em><sub>1</sub> be ' +
               'the number of ' + card1 + ' in the hand; let ' +
               '<em>X</em><sub>2</sub> be the ' +
               'number of ' + card2 + ' in the hand; and ' +
               'let <em>X</em><sub>3</sub> be the number of cards in the hand that are ' +
               'neither ' + card1 + ' nor ' + card2 +
               '. <span class="qSpan">The random variables ' +
               '{<em>X</em><sub>1</sub>, <em>X</em><sub>2</sub>, <em>X</em><sub>3</sub>} ' +
               'have a multinomial joint distribution.</span>';
    document.writeln(qStr);
    var opt = ['false','true'];
    var aVal = alphabet[0];
    writeSelectExercise(false, qCtr++, opt, aVal);
    document.writeln('</p>');
// -->
</script>
</div>

<!-- ================================= START PROBLEM =================================== -->
<div class="problem">
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var nDraws = listOfRandInts(1, 3, 8)[0];
    var rawOpt = [ 'the number of face cards drawn, the number of even-numbered cards drawn, ' +
                       'and number of odd-numbered cards drawn',
                   'the number of kings drawn, and the number of other cards drawn',
                   'the number of kings drawn, the number of hearts drawn, ' +
                       'and the number of twos drawn',
                   'the number of face cards drawn, the number of kings drawn, ' +
                       'and the number of other cards drawn',
                   'the number of spades drawn, the number of hearts drawn, ' +
                       'and the number of diamonds drawn'
                 ];
    var optPerm = randPermutation(rawOpt, 'inverse');
    var opt = optPerm[0];
    var aVal = alphabet[optPerm[1][0]] + '&' + alphabet[optPerm[1][1]];
    var qStr = 'Consider drawing ' + nDraws.toString() + ' cards at random with ' +
               'replacment from a standard deck of playing cards. For this problem, ' +
               'consider Aces to be face cards, not numbered cards. ' +
               '<span class="qSpan">Which of the following sets of variables have ' +
               'a multinomial joint distribution?</span> (select all such sets)</p><p>';
    document.writeln(qStr);
    writeSelectExercise(true, qCtr++, opt, aVal);
    document.writeln('</p>');
// -->
</script>
</div>


<!-- ================================= START PROBLEM =================================== -->
<div class="problem">
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var nDraws = listOfRandInts(1, 6, 10)[0];
    var nColors = listOfRandInts(1, 4, 6)[0];
    var colInx = listOfDistinctRandInts(nColors, 0, colors.length-1);
    var colVec = new Array(nColors);
    var balls = listOfRandInts(nColors, 1, 8);
    var nBalls = roundToDig(vSum(balls), 0);
    var pVec = vMult(1.0/nBalls, balls);
    var outcome = multinomialSample(pVec, nDraws);
    var p = multinomialPmf(outcome, pVec, nDraws);
    for (var i=0; i < nColors; i++) {
        colVec[i] = colors[colInx[i]];
    }
    var tabArr = [colVec, balls];
    var header = ['color','balls in bowl'];
    var qStr = 'A bowl contains ' + nBalls.toString() + ' balls of various colors: </p>' +
               listToTable(header, tabArr, 'standard','center',false) +
               '<p>Consider drawing a random sample of size ' + nDraws.toString() +
               ' with replacement from the bowl.</p>' +
               '<p><span class="qSpan">Fill in the following table of expected ' +
               'values of the numbers of balls of each color in the random sample.</span>' +
               '</p><div align="center"><center><table class="dataTable">' +
               '<caption>Fill in the expected values</caption><tr><th id="col0">' +
               'color</th>';
    for (var i=0; i < colVec.length; i++) {
        qStr += '<th id="col' + (i+1).toString() + '">' + colVec[i] + '</th>';
    }
    qStr += '</tr><tr><th scope="row" id="row1">expected number</th>';
    document.writeln(qStr);
    var chi2 = 0.0;
    for (var i=0; i < balls.length; i++ ) {
        document.writeln('<td headers="col' + (i+1).toString() + ',row1">');
        var expect = nDraws*balls[i]/nBalls;
        chi2 += (outcome[i] - expect)*(outcome[i] - expect)/expect;
        writeTextExercise(8, qCtr++, numToRange(expect));
        document.writeln('</td>');
    }
    var qStr = '</tr></table></center></div>' +
               '<p>Consider the following possible outcome of drawing the random sample:</p>';
    document.writeln(qStr);
    var tabArr = [colVec, outcome];
    var header = ['color','balls in sample'];
    var qStr = listToTable(header, tabArr, 'standard','center',false) +
               '<p><span class="qSpan">The probability of this outcome is</span>';
    document.writeln(qStr);
    writeTextExercise(8, qCtr++, numToRange(p));
    var qStr = '</p><p><span class="qSpan">The chi-squared statistic for this outcome ' +
               'is</span>';
    document.writeln(qStr);
    writeTextExercise(8, qCtr++, numToRange(chi2));
    var qStr = '</p><p><span class="qSpan">Is the chi-square curve with ' +
               (colVec.length - 1).toString() +
               ' degrees of freedom a good approximation to the probability histogram ' +
               'of the chi-squared statistic for a random sample of size ' +
               nDraws.toString() + ' with replacement from this bowl?</span>';
    document.writeln(qStr);
    var opt = ['no','yes'];
    var aVal = 'a';
    if (nDraws*(vMinMax(balls)[0])/nBalls >= 10) {
        aVal = 'b';
    }
    writeSelectExercise(false, qCtr++, opt, aVal);
    document.writeln('</p>');
// -->
</script>
</div>

<!-- ================================= START PROBLEM =================================== -->
<div class="problem">
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var df = listOfRandInts(1, 3, 50)[0];
    var lims = listOfRandInts(2, 1, 4);
    var se = Math.sqrt(2*df);
    lims[0] = roundToDig(Math.max(0, df - lims[0]*se), 1) ;
    lims[1] = roundToDig(df + lims[1]*se, 1);
    var theProb = chi2Cdf(df, lims[1]) - chi2Cdf(df, lims[0]);
    var theP = 10*listOfRandInts(1,1,9)[0];
    var pctile = chi2Inv(theP/100, df);
    var qStr = '<span class="qSpan">The area under the chi-square curve with ' +
               df.toString() + ' degrees of freedom from ' + lims[0].toString() +
               ' to ' + lims[1].toString() + ' is </span>';
    document.writeln(qStr);
    writeTextExercise(8, qCtr++, numToRange(theProb));
    var qStr = '</p><p><span class="qSpan">The ' + theP.toString() +
               '% percentile of the chi-square curve with ' + df.toString() +
               ' degrees of freedom is </span>';
    document.writeln(qStr);
    writeTextExercise(8, qCtr++, numToRange(pctile));
    document.writeln('</p>');
// -->
</script>
</div>

<!-- ================================= START PROBLEM =================================== -->
<div class="problem">
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var girth = ['&lt;3 ft.','3-6 ft.','6-9 ft.','9-12ft','&gt;12 ft.'];
    var prop = [ .1, .2, .35, .3, .05];
    var propMin = vMinMax(prop)[0];
    var nTrees = Math.ceil((10 + listOfRandInts(1, 2, 10)[0])/propMin);
    var propPert = listOfRandInts(prop.length, 80, 120);
    propPert = vPointwiseMult(prop, propPert);
    propPert = vMult(1.0/vSum(propPert), propPert);
    var observe = multinomialSample(propPert, nTrees);
    var chi2 = 0.0;
    for (var i =0; i < observe.length; i++ ) {
        expect = prop[i]*nTrees;
        chi2 += (observe[i] - expect)*(observe[i] - expect)/expect;
    }
    var pVal = 1.0 - chi2Cdf(observe.length-1, chi2);
    var nLoc = 5*listOfRandInts(1, 4, 7)[0];
    var propStr = new Array(prop.length);
    for (var i=0; i < prop.length; i++) {
        propStr[i] = roundToDig(100*prop[i],0).toString() + '%';
    }
    var header = ['girth range','claimed fraction of trees'];
    var head2 = ['girth range','observed number of trees'];
    var qStr = 'A logging company is bidding for logging rights on a large ' +
               'tract of land.  The <em>girth</em> of a tree is the circumference ' +
               'of its trunk at a particular height above the ground (roughly breast ' +
               'height).  The girth is important commercially, because it determines ' +
               'the width of the boards that can be milled from the ' +
               'tree. The owner of the property claims that the distribution ' +
               'of tree girth on the property is as follows:</p>' +
               listToTable(header, [girth, propStr], 'standard','center',false) +
               '<p>The logging company can estimate the number of trees fairly ' +
               'accurately using aerial photography, but needs to do a survey on the ' +
               'ground to determine the distribution of girth.  Ground surveys are ' +
               'expensive, so the logging company would like to draw its conclusions ' +
               'without surveying the entire tract.</p>' +
               '<p>The company hires you as an expert statistician to test the hypothesis ' +
               'that the distribution of girth is what the seller claims. You ' +
               'select ' + nLoc.toString() + ' locations on the property at random from ' +
               'a map, and send a surveyor to those ' + nLoc.toString() + ' locations to ' +
               'measure all the trees within a 25 foot radius of the location.  </p>' +
               '<p>Suppose that this results in measurementsof the girth of ' +
               nTrees.toString() + ' trees, and that for all practical purposes, those ' +
               nTrees.toString() + ' trees can be treated as a random sample with ' +
               'replacement from the population of trees on the property.</p>' +
               '<p>The observed distribution of girth among the ' + nTrees.toString() +
               ' trees in the sample is as follows:</p>' +
               listToTable(head2, [girth, observe], 'standard','center',false) +
               '<p><span class="qSpan">The observed value of the chi-squared statistic is ' +
               '</span>';
    document.writeln(qStr);
    writeTextExercise(8, qCtr++, numToRange(chi2));
    var qStr = '</p><p><span class="qSpan">Under the null hypothesis, the smallest ' +
               'expected number of trees in any of the categories is </span>';
    document.writeln(qStr);
    writeTextExercise(8, qCtr++, numToRange(propMin*nTrees) );
    var qStr = '<span class="qSpan"> so, under the null hypothesis, the probability ' +
               'histogram of the chi-squared statistic </span>';
    document.writeln(qStr);
    var opt = ['is not','is'];
    var aVal = 'a';
    if (propMin*nTrees >= 10) {
        aVal = 'b';
    }
    writeSelectExercise(false, qCtr++, opt, aVal);
    var qStr = '<span class="qSpan"> approximated well by a chi-squared curve. </span>' +
               '</p><p><span class="qSpan">The appropriate chi-squared curve to use to ' +
               'approximate the probability histogram of the chi-squared ' +
               'statistic has<K/font> (enter a number)';
    document.writeln(qStr);
    writeTextExercise(8, qCtr++, numToRange(observe.length-1));
    var qStr = '<span class="qSpan"> degrees of freedom. </span></p>' +
               '<p><span class="qSpan">The <em>P</em>-value of the null hypothesis ' +
               'is approximately </span>';
    document.writeln(qStr);
    writeTextExercise(8, qCtr++, numToRange(pVal,.0005) );
    var sigLevels = [1, 5, 10];
    var sigInx = listOfRandInts(1, 0, sigLevels.length - 1)[0];
    var sig = sigLevels[sigInx];
    var qStr = '</p><p><span class="qSpan">Should the null hypothesis be rejected at ' +
               'significance level ' + sig.toString() + '%?</span>';
    document.writeln(qStr);
    var opt = ['no','yes'];
    var aVal = 'a';
    if (pVal < sig/100) {
        aVal = 'b';
    }
    writeSelectExercise(false, qCtr++, opt, aVal);
    document.writeln('</p>');
// -->
</script>
</div>

<script language="JavaScript1.8" type="text/javascript" ><!--
    writeProblemSetFooter();
// -->
</script>

</body>

</html>
